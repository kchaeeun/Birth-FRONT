// Generated by view binder compiler. Do not edit!
package kr.ac.duksung.birth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.duksung.birth.R;

public final class ActivityBluetoothBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton appCompatButton;

  @NonNull
  public final AppCompatButton appCompatButton2;

  @NonNull
  public final TextView certiText;

  @NonNull
  public final TextView connectionStatusTextview;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ActivityToolbarBinding include;

  @NonNull
  public final TextView inputStringText;

  @NonNull
  public final TextView pregText;

  @NonNull
  public final ImageView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView tvNoCertifi;

  private ActivityBluetoothBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton appCompatButton, @NonNull AppCompatButton appCompatButton2,
      @NonNull TextView certiText, @NonNull TextView connectionStatusTextview,
      @NonNull ConstraintLayout constraintLayout, @NonNull ConstraintLayout constraintLayout2,
      @NonNull ActivityToolbarBinding include, @NonNull TextView inputStringText,
      @NonNull TextView pregText, @NonNull ImageView textView, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView tvNoCertifi) {
    this.rootView = rootView;
    this.appCompatButton = appCompatButton;
    this.appCompatButton2 = appCompatButton2;
    this.certiText = certiText;
    this.connectionStatusTextview = connectionStatusTextview;
    this.constraintLayout = constraintLayout;
    this.constraintLayout2 = constraintLayout2;
    this.include = include;
    this.inputStringText = inputStringText;
    this.pregText = pregText;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.tvNoCertifi = tvNoCertifi;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBluetoothBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBluetoothBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bluetooth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBluetoothBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatButton;
      AppCompatButton appCompatButton = ViewBindings.findChildViewById(rootView, id);
      if (appCompatButton == null) {
        break missingId;
      }

      id = R.id.appCompatButton2;
      AppCompatButton appCompatButton2 = ViewBindings.findChildViewById(rootView, id);
      if (appCompatButton2 == null) {
        break missingId;
      }

      id = R.id.certi_text;
      TextView certiText = ViewBindings.findChildViewById(rootView, id);
      if (certiText == null) {
        break missingId;
      }

      id = R.id.connection_status_textview;
      TextView connectionStatusTextview = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusTextview == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.include;
      View include = ViewBindings.findChildViewById(rootView, id);
      if (include == null) {
        break missingId;
      }
      ActivityToolbarBinding binding_include = ActivityToolbarBinding.bind(include);

      id = R.id.input_string_text;
      TextView inputStringText = ViewBindings.findChildViewById(rootView, id);
      if (inputStringText == null) {
        break missingId;
      }

      id = R.id.preg_text;
      TextView pregText = ViewBindings.findChildViewById(rootView, id);
      if (pregText == null) {
        break missingId;
      }

      id = R.id.textView;
      ImageView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.tv_no_certifi;
      TextView tvNoCertifi = ViewBindings.findChildViewById(rootView, id);
      if (tvNoCertifi == null) {
        break missingId;
      }

      return new ActivityBluetoothBinding((ConstraintLayout) rootView, appCompatButton,
          appCompatButton2, certiText, connectionStatusTextview, constraintLayout,
          constraintLayout2, binding_include, inputStringText, pregText, textView, textView2,
          textView3, tvNoCertifi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
